[{"/home/elct/Fitness-App/fitness_app/src/index.js":"1","/home/elct/Fitness-App/fitness_app/src/reportWebVitals.js":"2","/home/elct/Fitness-App/fitness_app/src/App.js":"3","/home/elct/Fitness-App/fitness_app/src/App.test.js":"4","/home/elct/Fitness-App/fitness_app/src/components/AddExercise/AddExercise.jsx":"5","/home/elct/Fitness-App/fitness_app/src/components/Login/Login.jsx":"6","/home/elct/Fitness-App/fitness_app/src/components/Dashboard/Dashboard.jsx":"7","/home/elct/Fitness-App/fitness_app/src/components/AddSubSession/AddSubSession.jsx":"8","/home/elct/Fitness-App/fitness_app/src/utils/PrivateRoute.js":"9","/home/elct/Fitness-App/fitness_app/src/components/AddUserWeight/AddUserWeight.jsx":"10","/home/elct/Fitness-App/fitness_app/src/utils/CheckAuthorized.js":"11","/home/elct/Fitness-App/fitness_app/src/utils/NavigateHome.js":"12"},{"size":1379,"mtime":1697966884478,"results":"13","hashOfConfig":"14"},{"size":362,"mtime":1697966876554,"results":"15","hashOfConfig":"14"},{"size":620,"mtime":1697966876466,"results":"16","hashOfConfig":"14"},{"size":246,"mtime":1696007614661,"results":"17","hashOfConfig":"14"},{"size":4304,"mtime":1697966884478,"results":"18","hashOfConfig":"14"},{"size":1680,"mtime":1697966876466,"results":"19","hashOfConfig":"14"},{"size":692,"mtime":1697966876466,"results":"20","hashOfConfig":"14"},{"size":4374,"mtime":1697966884478,"results":"21","hashOfConfig":"14"},{"size":454,"mtime":1697966884478,"results":"22","hashOfConfig":"14"},{"size":218,"mtime":1697966876466,"results":"23","hashOfConfig":"14"},{"size":519,"mtime":1697966884478,"results":"24","hashOfConfig":"14"},{"size":279,"mtime":1697966884478,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","suppressedMessages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1rnk5p",{"filePath":"29","messages":"30","suppressedMessages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35"},{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","suppressedMessages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42"},{"filePath":"43","messages":"44","suppressedMessages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46"},{"filePath":"47","messages":"48","suppressedMessages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","suppressedMessages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53"},{"filePath":"54","messages":"55","suppressedMessages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57"},{"filePath":"58","messages":"59","suppressedMessages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","suppressedMessages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","suppressedMessages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67"},"/home/elct/Fitness-App/fitness_app/src/index.js",[],[],"/home/elct/Fitness-App/fitness_app/src/reportWebVitals.js",[],[],"/home/elct/Fitness-App/fitness_app/src/App.js",["68"],[],"import React, { useEffect, useState } from 'react';\nimport { Login } from './components/Login/Login'\nimport { Auth } from '@supabase/auth-ui-react';\nimport { Dashboard } from './components/Dashboard/Dashboard';\n\nfunction App({ supabase }) {\n  const [session, setSession] = useState(null);\n\n  useEffect(() => {\n    supabase.auth.onAuthStateChange((_event, session) => {\n      setSession(session);\n    });\n  }, [supabase]);\n\n  return (\n    <div>\n      {session ? (\n        <Dashboard supabase={supabase} session={session} />\n      ) : (\n        <Login supabase={supabase} />\n      )}\n    </div>\n  );\n}\n\nexport default App;","/home/elct/Fitness-App/fitness_app/src/App.test.js",[],[],"/home/elct/Fitness-App/fitness_app/src/components/AddExercise/AddExercise.jsx",["69","70"],[],"import React, { useState } from \"react\";\nimport { Navigate, useNavigate } from \"react-router-dom\";\nimport NavigateHome from \"../../utils/NavigateHome\";\nimport \"./AddExercise.css\";\n\nfunction AddExercise() {\n  // State initialization\n  const [category, setCategory] = useState(\"strength\");\n  const [exerciseData, setExerciseData] = useState({\n    exerciseName: \"\",\n    description: \"\",\n    caloriesPerRep: 0,\n    caloriesPerDuration: 0,\n  });\n  const [successMessage, setSuccessMessage] = useState(\"\");\n  const [isSuccess, setIsSuccess] = useState(false);\n  const handleNavigate = NavigateHome();\n\n  // Event handlers\n  const handleInputChange = (event) => {\n    const { name, value } = event.target;\n    setExerciseData({ ...exerciseData, [name]: value });\n  };\n\n  const handleCategoryChange = (newCategory) => {\n    setCategory(newCategory);\n    // erase error message\n    setIsSuccess(false);\n  };\n\n  // Function to navigate to the main menu\n\n  // const navigateToMainMenu = () => {\n  //   const path = '/'; // Adjust the path as needed\n  //   navigate(path);\n\n  // };\n\n  const handleAddExercise = () => {\n    // Code to send the exercise data to the server will go here.\n    setSuccessMessage(\n      `Successfully added ${\n        category === \"cardio\" ? \"Cardio\" : \"Strength\"\n      } Exercise.`\n    );\n    setIsSuccess(true);\n    setExerciseData({\n      exerciseName: \"\",\n      description: \"\",\n      caloriesPerRep: 0,\n      caloriesPerDuration: 0,\n    });\n  };\n\n  return (\n    <div className=\"page\">\n      <div className=\"container\">\n        <div className=\"exercise-form\">\n          <h1 className=\"title-add-exercise\">Create a New Exercise</h1>\n          <div className=\"category-toggle\">\n            <button\n              className={`category-button ${\n                category === \"strength\" ? \"active\" : \"inactive\"\n              }`}\n              onClick={() => handleCategoryChange(\"strength\")}\n            >\n              Strength\n            </button>\n            <button\n              className={`category-button ${\n                category === \"cardio\" ? \"active\" : \"inactive\"\n              }`}\n              onClick={() => handleCategoryChange(\"cardio\")}\n            >\n              Cardio\n            </button>\n          </div>\n\n          {/* Form */}\n          <form>\n            <div className=\"input-container\">\n              <label>Exercise Name:</label>\n              <input\n                type=\"text\"\n                name=\"exerciseName\"\n                value={exerciseData.exerciseName}\n                onChange={handleInputChange}\n              />\n            </div>\n\n            {category === \"strength\" && (\n              <div className=\"input-container\">\n                <label>Calories / rep:</label>\n                <input\n                  type=\"number\"\n                  name=\"caloriesPerRep\"\n                  value={exerciseData.caloriesPerRep}\n                  onChange={handleInputChange}\n                />\n              </div>\n            )}\n            {category === \"cardio\" && (\n              <div className=\"input-container\">\n                <label>Calories / 15 minutes:</label>\n                <input\n                  type=\"number\"\n                  name=\"caloriesPerDuration\"\n                  value={exerciseData.caloriesPerDuration}\n                  onChange={handleInputChange}\n                />\n              </div>\n            )}\n            <div className=\"input-container\">\n              <label>Description:</label>\n              <textarea\n                name=\"description\"\n                value={exerciseData.description}\n                onChange={handleInputChange}\n              />\n            </div>\n          </form>\n\n          <div className=\"form-buttons-add-exercise\">\n            <button className=\"button-add-exercise\" onClick={handleNavigate}>\n              Done\n            </button>\n            <button\n              className=\"button-add-exercise\"\n              type=\"button\"\n              onClick={handleAddExercise}\n            >\n              Add {category === \"cardio\" ? \"Cardio\" : \"Strength\"} Exercise\n            </button>\n          </div>\n\n          {isSuccess && (\n            <div className=\"message-add-exercise\">{successMessage}</div>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default AddExercise;\n","/home/elct/Fitness-App/fitness_app/src/components/Login/Login.jsx",["71","72"],[],"import React from 'react';\nimport './Login.css';\nimport photo from '../../images/photo.jpg'\nimport { Link } from 'react-router-dom';\nimport { createClient } from '@supabase/supabase-js'\nimport { Auth } from '@supabase/auth-ui-react'\nimport { ThemeSupa } from '@supabase/auth-ui-shared'\n\nexport const Login = ({supabase}) => {\n    const passwordPolicy = {\n        minLength: process.env.GOTRUE_PASSWORD_MIN_LENGTH || 6, \n    };\n\n    return (\n        <div className=\"page\">\n\n            <div className='container ctn-login'>\n\n                {/* container item 1 */}\n                <div className='box left-box left-box-lgn'>\n\n                        {/* left-box item 1 */}\n                        <div className=\"form-login\">\n                        <Auth\n                            supabaseClient={supabase}\n                            providers={[]}\n                            passwordPolicy={ passwordPolicy }\n\n                            appearance={{ theme: ThemeSupa,\n                                style: {\n                                    button: { background: '#047aed', color: 'white' },\n                                    anchor: { color: '#047aed' },\n                                    },\n                            }}\n                            \n                            />\n                        </div>\n\n                </div>\n\n                {/* container item 2 */}\n                <div className='box right-box right-box-lgn img-rbox'>\n\n                    \n                    {/* right-box item 1 */}\n                    <img src={photo} alt=\"gym_photo\" className='img-lgn'/>\n\n                </div>\n\n            </div>\n\n        </div>\n    );\n}\n","/home/elct/Fitness-App/fitness_app/src/components/Dashboard/Dashboard.jsx",[],[],"/home/elct/Fitness-App/fitness_app/src/components/AddSubSession/AddSubSession.jsx",["73"],[],"import React, { useState } from \"react\";\nimport \"./AddSubSession.css\";\nimport { Navigate } from \"react-router-dom\";\nimport NavigateHome from \"../../utils/NavigateHome\";\n\nfunction AddSubSession() {\n  const [category, setCategory] = useState(\"strength\");\n  const [subSessionData, setSubSessionData] = useState({\n    sessionName: \"\",\n    exercises: [],\n    startTime: \"\",\n    endTime: \"\",\n    sets: 0,\n    repsPerSet: 0,\n  });\n  const [successMessage, setSuccessMessage] = useState(\"\");\n  const [isSuccess, setIsSuccess] = useState(false);\n  const handleNavigate = NavigateHome();\n\n  const handleInputChange = (event) => {\n    const { name, value } = event.target;\n    setSubSessionData({ ...subSessionData, [name]: value });\n  };\n\n  const handleCategoryChange = (newCategory) => {\n    setCategory(newCategory);\n    // Erase error message\n    setIsSuccess(false);\n  };\n\n  const handleAddSubSession = () => {\n    // Code to send the subsession data to the server goes here.\n    setSuccessMessage(\n      `Successfully added ${\n        category === \"cardio\" ? \"Cardio\" : \"Strength\"\n      } Subsession.`\n    );\n    setIsSuccess(true);\n    setSubSessionData({\n      sessionName: \"\",\n      exercises: [],\n      startTime: \"\",\n      endTime: \"\",\n      sets: 0,\n      repsPerSet: 0,\n    });\n  };\n\n  return (\n    <div className=\"page\">\n      <div className=\"container\">\n        <div className=\"subsession-form\">\n          <h1 className=\"title-add-subsession\">Add A Workout</h1>\n          <div className=\"category-toggle\">\n            <button\n              className={`category-button ${\n                category === \"strength\" ? \"active\" : \"inactive\"\n              }`}\n              onClick={() => handleCategoryChange(\"strength\")}\n            >\n              Strength\n            </button>\n            <button\n              className={`category-button ${\n                category === \"cardio\" ? \"active\" : \"inactive\"\n              }`}\n              onClick={() => handleCategoryChange(\"cardio\")}\n            >\n              Cardio\n            </button>\n          </div>\n\n          <form>\n            <div className=\"input-container\">\n              <label>Workout:</label>\n              <input\n                type=\"text\"\n                name=\"sessionName\"\n                value={subSessionData.sessionName}\n                onChange={handleInputChange}\n              />\n            </div>\n\n            <div className=\"input-container time-subsession\">\n              <label>Start Time:</label>\n              <input\n                type=\"time\"\n                name=\"startTime\"\n                value={subSessionData.startTime}\n                onChange={handleInputChange}\n              />\n            </div>\n            <div className=\"input-container time-subsession\">\n              <label>End Time:</label>\n              <input\n                type=\"time\"\n                name=\"endTime\"\n                value={subSessionData.endTime}\n                onChange={handleInputChange}\n              />\n            </div>\n\n            {category === \"strength\" && (\n              <div className=\"input-container\">\n                <label>Sets:</label>\n                <input\n                  type=\"number\"\n                  name=\"sets\"\n                  value={subSessionData.sets}\n                  onChange={handleInputChange}\n                />\n              </div>\n            )}\n\n            {category === \"strength\" && (\n              <div className=\"input-container\">\n                <label>Reps per Set:</label>\n                <input\n                  type=\"number\"\n                  name=\"repsPerSet\"\n                  value={subSessionData.repsPerSet}\n                  onChange={handleInputChange}\n                />\n              </div>\n            )}\n          </form>\n\n          <div className=\"form-buttons-add-subsession\">\n            <button className=\"button-add-subsession\" onClick={handleNavigate}>\n              Done\n            </button>\n            <button\n              className=\"button-add-subsession\"\n              onClick={handleAddSubSession}\n            >\n              Add {category === \"cardio\" ? \"Cardio\" : \"Strength\"} Subsession\n            </button>\n          </div>\n\n          {isSuccess && (\n            <div className=\"message-add-subsession\">{successMessage}</div>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default AddSubSession;\n","/home/elct/Fitness-App/fitness_app/src/utils/PrivateRoute.js",["74","75"],[],"import { Outlet, Navigate } from \"react-router-dom\";\nimport { useEffect, useState } from \"react\";\nimport CheckAuthroization from \"./CheckAuthorized\";\n\nconst PrivateRoute = ({ supabase }) => {\n  const { error, isAuthenticated } = CheckAuthroization(supabase);\n  // console.log(error, isAuthenticated);\n\n  if (!isAuthenticated) {\n    return null;\n  }\n  if (error) {\n    return <Navigate to=\"/\" />;\n  }\n  return <Outlet />;\n};\n\nexport default PrivateRoute;\n","/home/elct/Fitness-App/fitness_app/src/components/AddUserWeight/AddUserWeight.jsx",[],[],"/home/elct/Fitness-App/fitness_app/src/utils/CheckAuthorized.js",[],[],"/home/elct/Fitness-App/fitness_app/src/utils/NavigateHome.js",["76"],[],"import React from \"react\";\nimport { useNavigate } from \"react-router-dom\";\n\nconst NavigateHome = () => {\n  const navigate = useNavigate();\n\n  const navigateToHome = () => {\n    const path = \"/\";\n    navigate(path);\n  };\n\n  return navigateToHome;\n};\n\nexport default NavigateHome;\n",{"ruleId":"77","severity":1,"message":"78","line":3,"column":10,"nodeType":"79","messageId":"80","endLine":3,"endColumn":14},{"ruleId":"77","severity":1,"message":"81","line":2,"column":10,"nodeType":"79","messageId":"80","endLine":2,"endColumn":18},{"ruleId":"77","severity":1,"message":"82","line":2,"column":20,"nodeType":"79","messageId":"80","endLine":2,"endColumn":31},{"ruleId":"77","severity":1,"message":"83","line":4,"column":10,"nodeType":"79","messageId":"80","endLine":4,"endColumn":14},{"ruleId":"77","severity":1,"message":"84","line":5,"column":10,"nodeType":"79","messageId":"80","endLine":5,"endColumn":22},{"ruleId":"77","severity":1,"message":"81","line":3,"column":10,"nodeType":"79","messageId":"80","endLine":3,"endColumn":18},{"ruleId":"77","severity":1,"message":"85","line":2,"column":10,"nodeType":"79","messageId":"80","endLine":2,"endColumn":19},{"ruleId":"77","severity":1,"message":"86","line":2,"column":21,"nodeType":"79","messageId":"80","endLine":2,"endColumn":29},{"ruleId":"77","severity":1,"message":"87","line":1,"column":8,"nodeType":"79","messageId":"80","endLine":1,"endColumn":13},"no-unused-vars","'Auth' is defined but never used.","Identifier","unusedVar","'Navigate' is defined but never used.","'useNavigate' is defined but never used.","'Link' is defined but never used.","'createClient' is defined but never used.","'useEffect' is defined but never used.","'useState' is defined but never used.","'React' is defined but never used."]